// tslint:disable
/**
 * Malphas Backend
 * Endpoint documentation for the Malphas Backend
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined } from '../runtime';
import type { OperationOpts, HttpHeaders, HttpQuery } from '../runtime';
import type {
    CircuitCreationDto,
    CircuitDto,
} from '../models';

export interface DeleteCircuitRequest {
    id?: string;
}

export interface ListAllCircuitsRequest {
    scene: string;
}

export interface PostCircuitRequest {
    circuitCreationDto: CircuitCreationDto;
}

/**
 * no description
 */
export class CircuitApi extends BaseAPI {

    /**
     * Delete a circuit
     * Delete a circuit
     */
    deleteCircuit({ id }: DeleteCircuitRequest): Observable<void>
    deleteCircuit({ id }: DeleteCircuitRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    deleteCircuit({ id }: DeleteCircuitRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {

        const query: HttpQuery = {};

        if (id != null) { query['id'] = id; }

        return this.request<void>({
            url: '/circuit',
            method: 'DELETE',
            query,
        }, opts?.responseOpts);
    };

    /**
     * Get all circuits in a given scene
     * Get All Circuits
     */
    listAllCircuits({ scene }: ListAllCircuitsRequest): Observable<Array<CircuitDto>>
    listAllCircuits({ scene }: ListAllCircuitsRequest, opts?: OperationOpts): Observable<AjaxResponse<Array<CircuitDto>>>
    listAllCircuits({ scene }: ListAllCircuitsRequest, opts?: OperationOpts): Observable<Array<CircuitDto> | AjaxResponse<Array<CircuitDto>>> {
        throwIfNullOrUndefined(scene, 'scene', 'listAllCircuits');

        const query: HttpQuery = { // required parameters are used directly since they are already checked by throwIfNullOrUndefined
            'scene': scene,
        };

        return this.request<Array<CircuitDto>>({
            url: '/circuit',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     * Create a new circuit
     * Create a new circuit
     */
    postCircuit({ circuitCreationDto }: PostCircuitRequest): Observable<void>
    postCircuit({ circuitCreationDto }: PostCircuitRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    postCircuit({ circuitCreationDto }: PostCircuitRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {
        throwIfNullOrUndefined(circuitCreationDto, 'circuitCreationDto', 'postCircuit');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<void>({
            url: '/circuit',
            method: 'POST',
            headers,
            body: circuitCreationDto,
        }, opts?.responseOpts);
    };

}
