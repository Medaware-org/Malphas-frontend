openapi: 3.1.0
info:
  title: Malphas Backend
  description: Endpoint documentation for the Malphas Backend
  version: 1.0.0
servers:
  - url: http://localhost:3333
    description: Local development  server
paths:
  /:
    get:
      tags:
        - Status
      operationId: statusEndpoint
      summary: Status endpoint
      description: Status endpoint
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string

  /scene:
    get:
      tags:
        - Scenes
      operationId: listAllScenes
      summary: Get All Scenes
      description: Get a list of all the scenes of the current user
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/sceneDto"
    post:
      tags:
        - Scenes
      operationId: createScene
      summary: Create a new scene
      description: Create a new scene
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sceneCreationDto"
      responses:
        200:
          description: OK
    delete:
      tags:
        - Scenes
      operationId: deleteScene
      summary: Delete an existing scene
      description: Delete an existing scene
      parameters:
        - in: query
          name: id
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
    put:
      tags:
        - Scenes
      operationId: updateScene
      summary: Update an existing scene
      description: Update an existing scene
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sceneUpdateDto"
      responses:
        200:
          description: OK

  /circuit:
    post:
      tags:
        - Circuit
      operationId: postCircuit
      summary: Create a new circuit
      description: Create a new circuit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/circuitCreationDto"
      responses:
        200:
          description: OK
        400:
          description: Invalid credentials
        500:
          description: Internal server error
    get:
      tags:
        - Circuit
      operationId: listAllCircuits
      summary: Get All Circuits
      description: Get all circuits in a given scene
      parameters:
        - in: query
          name: scene
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/circuitDto"
    put:
      tags:
        - Circuit
      operationId: updateCircuit
      summary: Update a circuit
      description: Update parameters of an existing circuit
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/circuitUpdateDto"
      responses:
        200:
          description: OK
    delete:
      tags:
        - Circuit
      operationId: deleteCircuit
      summary: Delete a circuit
      description: Delete a circuit
      parameters:
        - in: query
          name: id
          schema:
            type: string
            format: uuid
      responses:
          200:
            description: OK

  /wire:
    post:
      tags:
        - Wire
      operationId: postWire
      summary: Create a new wire
      description: Create a new wire
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/wireCreationDto"
      responses:
        200:
          description: OK
    get:
      tags:
        - Wire
      operationId: listAllWires
      summary: Get all wires
      description: Get all wires in a given scene
      parameters:
        - in: query
          name: scene
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/wireDto"
    delete:
      tags:
        - Wire
      operationId: deleteWire
      summary: Delete a wire
      description: Delete a wire
      parameters:
        - in: query
          name: id
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK

components:
  schemas:
    credentialsDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    sceneDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        author:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
      required:
        - id
        - author
        - name
        - description
    sceneCreationDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
        - name
        - description
    sceneUpdateDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
      required:
        - id
        - name
        - description
    tokenDto:
      type: object
      properties:
        token:
          type: string
      required:
        - token
    circuitCreationDto:
      type: object
      properties:
        parent_scene:
          type: string
          format: uuid
        gate_type:
          type: string
        location_x:
          type: int
        location_y:
          type: int
        parent_circuit:
          type: string
          format: uuid
      required:
        - parent_scene
        - gate_type
        - location_x
        - location_y
    circuitDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        parent_scene:
          type: string
          format: uuid
        location_x:
          type: int
        location_y:
          type: int
        parent_circuit:
          type: string
          format: uuid
        gate_type:
          type: string
      required:
        - id
        - parent_scene
        - location_x
        - location_y
        - gate_type
    circuitUpdateDto:
      type: object
      properties:
        location_x:
          type: integer
        location_y:
          type: integer
        parent_circuit:
          type: string
          format: uuid
        gate_type:
          type: string
    wireCreationDto:
      type: object
      properties:
        source_circuit:
          type: string
          format: uuid
        target_circuit:
          type: string
          format: uuid
        init_signal:
          type: boolean
        number_input:
          type: int
        number_output:
          type: int
        location:
          type: string
      required:
        - source_circuit
        - target_circuit
        - init_signal
        - number_input
        - number_output
        - location
    wireDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        source_circuit:
          type: string
          format: uuid
        target_circuit:
          type: string
          format: uuid
        init_signal:
          type: boolean
        number_input:
          type: int
        number_output:
          type: int
        location:
          type: any
      required:
        - id
        - source_circuit
        - target_circuit
        - location_y
        - init_signal
        - number_input
        - number_output
        - location
    errorDto:
      type: object
      properties:
        summary:
          type: string
        description:
          type: string
      required:
        - summary
        - description
